package com.gmail.sungmin0511a.drawAbles;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;

public class CircleShapedChild extends Child {
	/**
	 * 
	 */
	private static final long serialVersionUID = 6376911934775631372L;
	Color color;
	protected int radius;

	public CircleShapedChild(Point location, int radius) {
		super(location);
		this.radius = radius;
		color = Color.black;
	}

	@Override
	public boolean contains(Child child) {
		int x = getLocation().x;
		int y = getLocation().y;
		for (int i = 0; i < 12; i++) {
			if (child.contains(new Point((int) (x + Math.cos(i * 30 * Math.PI / 180) * radius),
					(int) (y + Math.sin(i * 30 * Math.PI / 180) * radius))))
				return true;
		}
		return false;
	}

	@Override
	public boolean contains(Point point) {

		int X = point.x - getLocation().x;
		int Y = point.y - getLocation().y;
		if (Math.sqrt(X * X + Y * Y) < radius)
			return true;
		else
			return false;
	}
	
	@Override
	public void draw(Graphics g) {
		g.setColor(color);
		Point global = GlobalLocation();
		g.fillOval(getLocation().x - radius + global.x, getLocation().y - radius + global.x,
				radius * 2, radius * 2);
	}
	
	public Color getColor() {
		return color;
	}
	
	public void setColor(Color color) {
		this.color = color;
	}

}
