/**
 * 
 */
package com.gmail.sungmin0511a.costume;

import java.awt.Graphics2D;

import com.gmail.sungmin0511a.drawAbles.Child;

/** Child들을 꾸며주는 역할을 하는 Costume을 정의합니다.
 * <p>
 * 출력되기 전 {@link Graphics2D}에 별다른 처리를 하지 않는다면, {@link Child}
 * 들은 는 자신이 설정된
 * @author 신성민 */
public interface Costume {
	/** Costume의 실행우선도를 최상으로 설정하는 상수입니다. 다른 Costume들보다 비교적 먼저
	 * 실행되어야 할 Costume에게 설정하세요 */
	public int MAX_PRIORITY = 2;
	/** Costume의 실행우선도를 최하로 설정하는 상수입니다. 다른 Costume들보다 비교적 나중에
	 * 실행되어야 할 Costume에게 설정하세요 */
	public int MIN_PRIORITY = 0;
	/** Costume의 실행우선도를 보통으로 설정하는 상수입니다. 아무런 설정을 하지 않았다면 대개 이
	 * 값으로 초기화됩니다. */
	public int NORM_PRIORITY = 1;

	/** Child가 그려지기 전에 하는 작업을 정의합니다.
	 * <p>
	 * 만약 이 매서드를 override해서 {@link Graphics2D}의 설정을 변경한다면,
	 * {@link #unDress(Graphics2D)}매서드에 정반대로 기능하게 기술해야 합니다.
	 * 이 매서드로 인해 변경된 {@link Graphics2D}의 설정이 이후 다른 Child에게
	 * 영향을 끼치지 않게 하기 위함입니다.
	 * @param graphics
	 *        이 Costume이 포함된 {@link Child}가 출력될
	 *        {@link Graphics2D}입니다. 이 매서드의 역할은, 이
	 *        {@link Graphics2D}의 기능 및 설정을 변경하는것입니다. */
	public abstract void dressUp(Graphics2D graphics);
	
	public int getPriority();
	
	/** Child가 그려진 후 원래대로 정리하는 작업을 정의합니다.
	 * <p>
	 * 만약 이 매서드를 override한다면, {@link #dressUp(Graphics2D)}과
	 * 정반대로 기능하게 해야 합니다. {@link #dressUp(Graphics2D)}으로
	 * 변경해놓은 {@link Graphics2D} 의 설정을 원래대로 되돌려 놓는 역할을 해야
	 * 합니다.
	 * @param graphics
	 *        이 Costume이 포함된 {@link Child}가 출력될
	 *        {@link Graphics2D}입니다. 이 매서드의 역할은, 이
	 *        {@link Graphics2D}의 기능 및 설정을 원래대로 복구하는것입니다. */
	public abstract void unDress(Graphics2D graphics);
}
