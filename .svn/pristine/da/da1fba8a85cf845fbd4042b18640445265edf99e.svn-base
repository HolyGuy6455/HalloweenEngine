/**
 * 
 */
package com.gmail.sungmin0511a.costume;

import java.awt.Graphics2D;
import java.awt.Point;

import com.gmail.sungmin0511a.drawAbles.Child;

/** {@link Child}가 그려질 위치를 정해줍니다.
 * <p>
 * Location은 {@link Child}가 그려질때, 위치를 기억해 두었다가 {@link Child}
 * 가 그 좌표에 그려질 수 있도록 돕습니다.
 * @author 신성민 */
public class Location implements Costume {
	private Point point;
	
	/** 좌표 (0,0)에 새로운 Location을 생성합니다. */
	public Location() {
		this(new Point());
	}
	
	/** 주어진 두 정수로 새로운 {@link Point}를 생성해 그것으로 Location을
	 * 생성합니다.
	 * @param x
	 *        이 Location의 x좌표가 됩니다.
	 * @param y
	 *        이 Location의 x좌표가 됩니다. */
	public Location(int x, int y) {
		this(new Point(x, y));
	}
	
	/** 기본생성자입니다. 주어지는 {@link Point}를 좌표삼아, 새 Location을
	 * 생성합니다. 파라매터로 주어진 {@link Point}의 x값, y값이 변하면 이
	 * Location의 좌표도 변경됩니다.
	 * @param point
	 *        이 Location의 좌표가 될 Point입니다. */
	public Location(Point point) {
		this.point = point;
	}
	
	/** Child가 이 Location이 지시하는 곳에 그려지도록 합니다. 주어지는
	 * {@link Graphics2D}의
	 * {@link Graphics2D#translate(int, int) translate(int,
	 * int)}를 실행해, Child가 그려질 위치를 결정합니다. */
	@Override
	public void dressUp(Graphics2D graphics) {
		graphics.translate(point.x, point.y);
	}
	
	/** 이 Location이 가리키는 좌표를 반환합니다.
	 * @return 현재 Location이 있는 좌표{@link Point}입니다. */
	public Point getPoint() {
		return point;
	}

	public int getX() {
		return point.x;
	}
	
	public int getY() {
		return point.y;
	}
	
	public void setPoint(Point point) {
		this.point = point;
	}

	public void setX(int x) {
		point.x = x;
	}
	
	public void setY(int y) {
		point.y = y;
	}
	
	public void set(int x, int y) {
		point.x = x;
		point.y = y;
	}

	/** 주어진 파라매터만큼 좌표를 옮깁니다. 주어진 정수로 값이 새롭게 정해지는 것이 아니라, 기존의
	 * x,y값에 더해집니다.
	 * @param x
	 *        변경하고싶은 x좌표 변화량의 크기입니다.
	 * @param y
	 *        변경하고싶은 y좌표 변화량의 크기입니다. */
	public void translate(int x, int y) {
		point.translate(x, y);
	}
	
	/** Child가 그려진 뒤 좌표를 원래대로 합니다. */
	@Override
	public void unDress(Graphics2D graphics) {
		graphics.translate(-point.x, -point.y);
	}
}
